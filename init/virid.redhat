#! /bin/bash
#
# Copyright 2011, Marc Garcia <garcia.marc@gmail.com>
#
# This file is part of Viri.
#
# Viri is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# Viri is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Viri.  If not, see <http://www.gnu.org/licenses/>.
#
# virid          Start/Stop the viri daemon.
#
# chkconfig: 2345 90 60
# description: viri is an application for remote executing Python scripts 
# processname: virid
# config: /etc/viri
# pidfile: /var/run/virid.pid

# Source function library.
. /etc/init.d/functions
 
# See how we were called.
  
PROG="virid"
LOCKFILE="/var/lock/subsys/virid"
PIDFILE="/var/run/virid.pid"

start() {
    echo -n $"Starting $PROG: " 
    if [ -e $LOCKFILE ]; then
        if [ -e $PIDFILE ] && [ -e /proc/`cat $PIDFILE` ]; then
            failure $"cannot start virid: virid already running.";
            echo
            return 1
        fi
    fi
    daemon $PROG -p $PIDFILE
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch $LOCKFILE;
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    if [ ! -e $LOCKFILE ] || [ ! -e $PIDFILE ]; then
        failure $"cannot stop virid: virid is not running."
        echo
        return 1;
    fi
    killproc -p $PIDFILE $PROG
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $LOCKFILE;
    return $RETVAL
}   

rhstatus() {
    status virid
}   

restart() {
    stop
    start
}

condrestart() {
    if status -p $PIDFILE $PROG >&/dev/null; then
	stop
	start
    fi
}

reload() {
    echo -n $"Reloading viri daemon configuration: "
    killproc virid -HUP
    RETVAL=$?
    echo
    return $RETVAL
}   

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reload)
    reload
    ;;
  condrestart|try-restart)
    condrestart
    ;;
  status)
    rhstatus
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|reload|restart|condrestart}"
    exit 1
esac

